{
"heading":"JSONModel class",
"intro":"This class represents a collection of data stored in a JSON file.",
"example":"$json = new JSONModel('data.json');\n$json->x = 'foo';\n$myView->render($json);\n\n$json = new JSONModel('newdata.json',$object);\n$json->save();\n\n$json = new JSONModel('data.json');\n$json->cancel();\n$json->message = 'this will not be saved';\n\n$json = new JSONModel();\n$json->more = 'foo';\n$json->saveAs('newdata.json');\n$json->extra1 = 'this will be saved too';\n",
"description":"You can send the data directly to a view, but you can also modify properties on these instances. You can save the modifications explicitly with the <code>save()</code> or <code>saveAs()</code> methods, otherwise they will be <b>saved automatically</b> when the instance is destructed.</p><p>To prevent saving changes you can call the <code>cancel()</code> method. If the file does not exist <b>or</b> if you do not provide a file name, you can instantiate the model with an associative array, a model or an object.</p><p>If a file name was provided, the data will be stored, otherwise not. If the name of an existing file <b>and</b> data is provided when you instantiate, the array/model/object <b>is ignored</b> and the data is read from the file. This can be used for setting default values. If these defaults are not changed, the file will <b>not</b> be created unless <code>save()</code> is called explicitly."
}
