{
"heading":"Route class",
"intro":"This class handles application routing.",
"example":"Route::get('@^'.APP_PATH.'$@',function(){\n  echo 'This is the front page';\n});\n\nRoute::get('@^'.APP_PATH.'Customer/([0-9]+)/(.*)@',function($m){\n  $CustomerId = $m[1];\n  $action = $m[2];\n  ShowCustomer($CustomerId,$action);\n});\n\n// Catch all requests and fire up controller:\nRoute::request('@^'.APP_PATH.'([^?]*)$@',function($path) {\n  $parts = $path[1] ? explode('/',$path[1]) : array('Default');\n  $controller_class = array_shift($parts);\n  $fn = CONTROLLER_PATH.$controller_class.'Controller.php';\n  if(!file_exists($fn))\n    $controller_class = 'Default';\n  $fn = CONTROLLER_PATH.$controller_class.'Controller.php';\n  if(file_exists($fn)) {\n    include($fn);\n    if(isset($bootstrap))\n      $bootstrap();\n    if(isset($noclass) && $noclass) {}\n    else {\n      $controller = $controller_class.'Controller';\n      $cont = new $controller($parts);\n      $action = $parts ? array_shift($parts) : '_Default';\n      $cont->$action($parts);\n    }\n  }\n});",
"description":"This is an abstract class, don't make instances, just call the methods statically. You can route different URIs by setting up multiple Route rules, and you can use a catch all Route to map to controllers, like the one in the last example above.</p><p>There are four methods: <code>get()</code> for handling GET requests, <code>post()</code> for handling POST requests, <code>request()</code> for handling both GET and POST and <code>handle_methods()</code> for handling any HTTP method. The three first methods requires 2 arguments: a regular expression to match the URI, and a callback. The <code>handle_methods()</code> must be called with an array of which HTTP methods to handle as the first argument, followed by a regular expression and a callback.</p><p>A single parameter is passed to the callback: an array containing the matching result from the regular expression. Index 0 is the full match, index 1, 2 and so on contains matched sub expressions."
}